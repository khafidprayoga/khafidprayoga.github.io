{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/promise",
    "result": {"data":{"post":{"slug":"/promise","title":"Promise","date":"18.10.2021","tags":[{"name":"Promise","slug":"promise"},{"name":"NodeJS","slug":"node-js"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Promise\",\n  \"date\": \"2021-10-18T00:00:00.000Z\",\n  \"slug\": \"/promise\",\n  \"tags\": [\"Promise\", \"NodeJS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Bob memiliki suatu janji dengan Alice untuk bertemu di kafe hari Rabu, tetapi Bob tidak\\nmendapatkan pesan balasan konfirmasi dari Alice, sehingga pesan tersebut\\nmasih dalam kondisi antre (pending). Hal yang membuat Alice tidak dapat membalas pesan\\ntersebut karena, Bob telah memblokir kontak Alice yang disebabkan pertengkaran minggu lalu.\"), mdx(\"p\", null, \"Kemudian Bob membuka blokir kontak Alice, kemudian dalam hitungan menit pesan telah diterima oleh Alice.\\nSetelah itu, Alice mengkonfirmasi jika dirinya tidak dapat datang ke pertemuan di hari Rabu\\n(rejected). Namun dia bisa hadir pada hari Kamis setelahnya (fulfilled/resolved) untuk memenuhi janji\\ndari Bob.\"), mdx(\"p\", null, \"Promise dalam JavaScript mirip seperti kasus diatas, yakni memiliki state (kondisi) pending,\\nfulfilled/resolved, dan rejected. Pada kasus pemrograman kita dapat simulasikan ketika anda\\nmengkonsumsi HTTP API dari backend server.\"), mdx(\"p\", null, \"Kasus\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Ambil data user di endpoint /user dengan method GET\"), mdx(\"p\", null, \"Hasil\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"pending: Backend mengambil data dari database melalui gateway Queue service\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"fulfilled/resolved: Queue menerima data dari database dan dikembalikan ke backend\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"rejected: query error, user tidak ditemukan\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Coba buat beberapa file berikut ini kedalam 1 direktori.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript:title=database.js\"\n  }, \"const data = [\\n  {\\n    id: 1,\\n    username: \\\"Bob\\\",\\n  },\\n  {\\n    id: 2,\\n    username: \\\"Alice\\\",\\n  },\\n];\\n\\nconst getUser = (id) => {\\n  return new Promise((resolve, reject) => {\\n    data.forEach((user) => {\\n      setTimeout(() => {\\n        if (user.id === id) {\\n          resolve({\\n            message: \\\"success\\\",\\n            data: user,\\n          });\\n        } else {\\n          reject(\\\"User not found\\\");\\n        }\\n      }, 3000);\\n    });\\n  });\\n};\\n\\nmodule.exports = getUser;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript:title=queue.js\"\n  }, \"const getUser = require(\\\"./database\\\");\\n\\nconst checkUserDB = (id) => {\\n  return new Promise((resolve, reject) => {\\n    getUser(id)\\n      .then((result) => resolve(result))\\n      .catch((error) => reject(error));\\n  });\\n};\\n\\nmodule.exports = checkUserDB;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript:title=api.js\"\n  }, \"const checkUserDB = require(\\\"./queue\\\");\\n\\nconst config = {\\n  path: \\\"/users\\\",\\n  method: \\\"GET\\\",\\n};\\nconst _handle = (dataPayload) => {\\n  if (dataPayload.path == config.path && dataPayload.method === config.method) {\\n    return true;\\n  } else {\\n    return false;\\n  }\\n};\\n\\nconst request = (data) => {\\n  if (_handle(data)) {\\n    return new Promise((resolve, reject) => {\\n      checkUserDB(data.userId)\\n        .then((result) => resolve(JSON.stringify(result)))\\n        .catch((error) => reject(error));\\n    });\\n  }\\n};\\n\\nmodule.exports = request;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript:title=client.js\"\n  }, \"const request = require(\\\"./api\\\");\\n\\nconst payload = {\\n  path: \\\"/users\\\",\\n  method: \\\"GET\\\",\\n  userId: 1,\\n};\\nconst badPayload = {\\n  path: \\\"/users\\\",\\n  method: \\\"GET\\\",\\n  userId: 11,\\n};\\n\\nrequest(payload).then((response) => console.log(response));\\nrequest(badPayload).then((response) => console.log(response));\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Bob memiliki suatu janji dengan Alice untuk bertemu di kafe hari Rabu, tetapi Bob tidak\nmendapatkan pesan balasan konfirmasi dari Aliceâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/promise","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}